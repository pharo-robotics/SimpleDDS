(name 'SimpleDDSTesting-SantiagoBragagnolo.6' message 'GIT Commit' id '041b9540-af5b-4175-aa15-cee01de5b15a' date '1 December 2014' time '8:57:01.455216 pm' author 'SantiagoBragagnolo' ancestors ((name 'SimpleDDSTesting-SantiagoBragagnolo.5' message '- refines transference of type definition by STON- adds new type loader that relies on the domain server parameters - It adds the possibility of using a externally defined domain with a local server instead of a proxy, giving fully capabilities for local usage of a server that can be used from outside. - it allows new kind of testing- it tests parameter bindings' id '4c5d61c8-ee65-4e51-b1ae-42f15d99ac93' date '23 November 2014' time '11:54:23.541331 pm' author 'SantiagoBragagnolo' ancestors ((name 'SimpleDDSTesting-SantiagoBragagnolo.4' message 'Typeloader with parameters' id 'bf8547bc-d9f3-4956-bcbd-d6a2a4b8a1c8' date '20 November 2014' time '6:07:26.88859 pm' author 'SantiagoBragagnolo' ancestors ((name 'SimpleDDSTesting-SantiagoBragagnolo.3' message 'Testing for parameters' id '050f1db2-06f5-4add-90d5-59ffa00f96e7' date '20 November 2014' time '1:36:17.760372 pm' author 'SantiagoBragagnolo' ancestors ((name 'SimpleDDSTesting-SantiagoBragagnolo.2' message '"Test: [ x ] Discovery[  ] Domain descriptor[  ] Domain descriptor server[  ] Domain descriptor server xmlrpc[  ] Domain descriptor server[  ] Participant Server[  ] Participant Server XMLRPC[ x ] Tcp Protocol[  ] Domain participant proxy and domain participant server should be polimorphic, since they are client and server.  [  ] Domain proxy y domain descriptor server should be polimorphic, since they are client and server.  "' id '303861f2-9631-4e46-b50f-fe00b55375b3' date '18 November 2014' time '3:56:30.583413 pm' author 'SantiagoBragagnolo' ancestors ((name 'SimpleDDSTesting-SantiagoBragagnolo.1' message 'SimpleDDS' id 'd15fcf5a-ba27-404e-9515-e5a8e6954b71' date '14 November 2014' time '10:25:29.45548 pm' author 'SantiagoBragagnolo' ancestors () stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())